Here’s how you can turn that TOC‑style Google Sheet into a JIRA‑ready CSV—step by step:

⸻

A. Manual export & cleanup
	1.	Download as CSV from Google Sheets
	•	In your sheet: File → Download → Comma‑separated values (.csv, current sheet).
	•	This gives you something like Sheet1.csv with all the columns you see (ATP Section, ATP Test, Summary, Parent, Issue Id, Issue Type).
	2.	Open & trim it
	•	In Excel, Google Sheets, or any text editor, delete all columns except the three JIRA needs:

Summary | Issue Type | Parent


	•	Make sure the header row reads exactly those names (capital “S” in Summary, capital “I” and space in “Issue Type”, capital “P” in Parent).

	3.	Save as atp_import.csv
	•	Use UTF‑8 encoding if you have any special characters.
	•	You now have a clean CSV that the JIRA CSV importer will understand.
	4.	Import into JIRA
	•	Jira settings → System → External System Import → CSV
	•	Upload your atp_import.csv, map Summary, Issue Type, and Parent to the corresponding JIRA fields, pick your project key, and run the import.

⸻

B. (Optional) Automate with a tiny script

If you’d rather automate the column‑cleanup so you can re‑run it whenever your sheet changes, here’s a Python‑style pseudocode:

# 1. Read the raw Google‑Sheet CSV you downloaded
df = pandas.read_csv("Sheet1.csv")

# 2. Keep only the three columns JIRA expects
df2 = df[["Summary", "Issue Type", "Parent"]]

# 3. Write out the cleaned CSV
df2.to_csv("atp_import.csv", index=False, encoding="utf-8")

You can even hook this into the Google Sheets API (with gspread) to pull the latest live data, but at minimum this script will:
	•	Read your downloaded CSV
	•	Filter to the three required columns
	•	Emit a perfectly‑shaped atp_import.csv ready for JIRA

⸻

In short:
	•	Manual route: download → delete extra columns → import.
	•	Automated route: run the 3‑line script to do the same.

Either way, once your file has exactly those three headers and the rows of “Summary | Issue Type | Parent,” you’re set.